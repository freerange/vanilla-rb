#!/usr/bin/env ruby

def create(new_app_dir)
  require 'fileutils'
  pristine_app = File.expand_path("../../pristine_app", __FILE__)
  FileUtils.cp_r(pristine_app, new_app_dir)
  FileUtils.mkdir_p(File.join(new_app_dir, "tmp"))
  require 'vanilla'
  File.open(File.join(new_app_dir, "Gemfile"), "w") do |f|
    f.write "source :rubygems\n\n# Vanilla itself.\ngem 'vanilla', '#{Vanilla::VERSION}'"
  end
  puts File.readlines(File.join(new_app_dir, "README"))[0..16].join
end

def upgrade
  require 'fileutils'
  soups_directory = File.join(Dir.pwd, "soups")
  if File.directory?(soups_directory)
    confirm("Upgrade system snips?") do
      pristine_system = File.expand_path("../../pristine_app/soups/system", __FILE__)
      copy(pristine_system, soups_directory)
    end
    confirm("Upgrade tutorial snips?") do
      pristine_system = File.expand_path("../../pristine_app/soups/tutorial", __FILE__)
      copy(pristine_system, File.join(Dir.pwd, "soups"))
    end
  else
    puts "Your soups must be in a directory called 'soups' to use this upgrade tool."
    exit -1
  end
end

def confirm(message)
  print(message + " [y/n]: ")
  if gets.strip =~ /^[yY]$/
    yield
  else
    puts "skipping."
  end
end

def copy(source, destination)
  puts "Copying: #{source} => #{destination}"
  FileUtils.cp_r(source, destination)
end

def console
  $LOAD_PATH << "lib"
  require "rubygems"
  require "bundler/setup"
  require "irb"
  require "vanilla/console"
  puts "The Soup is simmering."
  IRB.start 
end

case ARGV[0]
when "console"
  ARGV.clear
  console
when "upgrade"
  ARGV.clear
  upgrade
else
  create(ARGV[0])
end
